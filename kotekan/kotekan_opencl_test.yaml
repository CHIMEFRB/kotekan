---
type: config
system:
  mode: gpu_test
  #mode: pathfinder
  log_level: 3
#Have to duplicate num_elements and num_local_freq for now. Makes testing easier.
#Eventually, remove all references to "adjusted" in code.
num_elements: 256
num_adjusted_elements: 256
num_local_freq: 8
num_adjusted_local_freq: 8
num_total_freq: 64
#num_adjusted_elements/block_size * (num_adjusted_elements/block_size + 1)/2; block_size = 32.
num_blocks: 36
block_size: 32
samples_per_data_set: 32768
num_data_sets: 1
buffer_depth: 4
num_gpu_frames: 64
num_links: 8
link_map: [0,0,0,0,0,0,0,0]
#num_gpus: 3
num_gpus: 1
cpu_affinity: [0,1,2,3,4,5,6,7,8,9,10,11]
enable_gating: 0
gpu:
  commands:
  - name: input_data_stage
    kernel: ''
  - name: offset_accumulator
    kernel: "../lib/opencl/kernels/offset_accumulator.cl"
  - name: preseed_multifreq
    kernel: "../lib/opencl/kernels/preseed_multifreq.cl"
  - name: pairwise_correlator
    kernel: "../lib/opencl/kernels/pairwise_correlator.cl"    
  - name: output_data_result
    kernel: ''
  ts_element_offset: 0
  ts_num_elem_to_shift: 0
  ts_samples_to_shift: 0
  use_timeshift: 0
  enable_beamforming: false
  use_incoh_beamforming: 0
  gpu_0:
    kotekan_process: clProcess
    gpu_id: 0
    network_buffer: gpu_input_buffer_0
    output_buffer: gpu_output_buffer_0
#  gpu_1:
#    kotekan_process: clProcess
#    gpu_id: 1
#    network_buffer: gpu_input_buffer_1
#    output_buffer: gpu_output_buffer_1
#  gpu_2:
#    kotekan_process: clProcess
#    gpu_id: 2
#    network_buffer: gpu_input_buffer_2
#    output_buffer: gpu_output_buffer_2
#  gpu_3:
#    kotekan_process: clProcess
#    gpu_id: 3
#    network_buffer: gpu_input_buffer_3
#    output_buffer: gpu_output_buffer_3
gen_data:
  type: const
  value: 153
  test_data_gen_0:
    kotekan_process: testDataGen
    network_out_buf: gpu_input_buffer_0
#  test_data_gen_1:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_1
#  test_data_gen_2:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_2
#  test_data_gen_3:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_3
check_data:
  real: 0
  imag: 65536
  const_data_check_0:
    kotekan_process: constDataCheck
    buf: gpu_output_buffer_0
#  const_data_check_1:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_1
#  const_data_check_2:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_2
#  const_data_check_3:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_3
